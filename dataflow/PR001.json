{
	"name": "PR001",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "PR001Staging",
						"type": "DatasetReference"
					},
					"name": "Staging"
				},
				{
					"dataset": {
						"referenceName": "PR001Cloud360",
						"type": "DatasetReference"
					},
					"name": "Cloud"
				},
				{
					"dataset": {
						"referenceName": "PR001Cloud360",
						"type": "DatasetReference"
					},
					"name": "MAXKEY"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "PR001Cloud360",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     parameter1 as string ('st_ProductionStatus')",
				"}",
				"source(output(",
				"          ItemKey as string,",
				"          Desc1 as string,",
				"          PrintableDesc as string,",
				"          ProdLineAcctg as string,",
				"          ProductLineFunctional as string,",
				"          ProductLineCategory as string,",
				"          ProductFamily as string,",
				"          pct_PTFEContent as string,",
				"          PrimaryMfgLocation as string,",
				"          PackageType as string,",
				"          PackageLiner as string,",
				"          PackageWeight as string,",
				"          PackageTare as string,",
				"          LeadTime as string,",
				"          st_ProductionStatus as string,",
				"          st_ObsoletionStatus as string,",
				"          ProductDescPublic as string,",
				"          ProductDescInternal as string,",
				"          ApplBenefit as string,",
				"          LevelOfAddition as string,",
				"          ExperimentalProductName as string,",
				"          BaseProduct as string,",
				"          gyro_US_InksAndCoatings as string,",
				"          gyro_US_Thermoplastics as string,",
				"          gyro_US_Lubricants as string,",
				"          gyro_US_PersonalCare as string,",
				"          gyro_US_Other as string,",
				"          gyro_APAC_InksAndCoatings as string,",
				"          gyro_APAC_Thermoplastics as string,",
				"          gyro_APAC_Lubricants as string,",
				"          gyro_APAC_PersonalCare as string,",
				"          gyro_APAC_Other as string,",
				"          gyro_EMEA_InksAndCoatings as string,",
				"          gyro_EMEA_Thermoplastics as string,",
				"          gyro_EMEA_Lubricants as string,",
				"          gyro_EMEA_PersonalCare as string,",
				"          gyro_EMEA_Other as string,",
				"          RecordEffectiveStartDate as timestamp,",
				"          RecordEffectiveEndDate as timestamp,",
				"          RecordStatus as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Staging",
				"source(output(",
				"          PRD_SID as integer,",
				"          ItemKey as string,",
				"          Desc1 as string,",
				"          PrintableDesc as string,",
				"          ProdLineAcctg as string,",
				"          ProductLineFunctional as string,",
				"          ProductLineCategory as string,",
				"          ProductFamily as string,",
				"          pct_PTFEContent as string,",
				"          PrimaryMfgLocation as string,",
				"          PackageType as string,",
				"          PackageLiner as string,",
				"          PackageWeight as string,",
				"          PackageTare as string,",
				"          LeadTime as string,",
				"          st_ProductionStatus as string,",
				"          st_ObsoletionStatus as string,",
				"          ProductDescPublic as string,",
				"          ProductDescInternal as string,",
				"          ApplBenefit as string,",
				"          LevelOfAddition as string,",
				"          ExperimentalProductName as string,",
				"          BaseProduct as string,",
				"          gyro_US_InksAndCoatings as string,",
				"          gyro_US_Thermoplastics as string,",
				"          gyro_US_Lubricants as string,",
				"          gyro_US_PersonalCare as string,",
				"          gyro_US_Other as string,",
				"          gyro_APAC_InksAndCoatings as string,",
				"          gyro_APAC_Thermoplastics as string,",
				"          gyro_APAC_Lubricants as string,",
				"          gyro_APAC_PersonalCare as string,",
				"          gyro_APAC_Other as string,",
				"          gyro_EMEA_InksAndCoatings as string,",
				"          gyro_EMEA_Thermoplastics as string,",
				"          gyro_EMEA_Lubricants as string,",
				"          gyro_EMEA_PersonalCare as string,",
				"          gyro_EMEA_Other as string,",
				"          RecordEffectiveStartDate as timestamp,",
				"          RecordEffectiveEndDate as timestamp,",
				"          RecordStatus as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Cloud",
				"source(output(",
				"          MAXKEY as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT max([PRD_SID]) as MAXKEY\\nfrom [dbo].tbl_DIM_PRODUCT',",
				"     format: 'query') ~> MAXKEY",
				"Staging, MAXKEY join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"Cloud select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"join1, select1 lookup(Staging@ItemKey == select1@ItemKey,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 split(isNull(Staging@ItemKey),",
				"     disjoint: false) ~> ConditionalSplit1@(New, Exists)",
				"ConditionalSplit1@New derive(RecordStatus = 1) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          PRD_SID as integer,",
				"          ItemKey as string,",
				"          Desc1 as string,",
				"          PrintableDesc as string,",
				"          ProdLineAcctg as string,",
				"          ProductLineFunctional as string,",
				"          ProductLineCategory as string,",
				"          ProductFamily as string,",
				"          pct_PTFEContent as string,",
				"          PrimaryMfgLocation as string,",
				"          PackageType as string,",
				"          PackageLiner as string,",
				"          PackageWeight as string,",
				"          PackageTare as string,",
				"          LeadTime as string,",
				"          st_ProductionStatus as string,",
				"          st_ObsoletionStatus as string,",
				"          ProductDescPublic as string,",
				"          ProductDescInternal as string,",
				"          ApplBenefit as string,",
				"          LevelOfAddition as string,",
				"          ExperimentalProductName as string,",
				"          BaseProduct as string,",
				"          gyro_US_InksAndCoatings as string,",
				"          gyro_US_Thermoplastics as string,",
				"          gyro_US_Lubricants as string,",
				"          gyro_US_PersonalCare as string,",
				"          gyro_US_Other as string,",
				"          gyro_APAC_InksAndCoatings as string,",
				"          gyro_APAC_Thermoplastics as string,",
				"          gyro_APAC_Lubricants as string,",
				"          gyro_APAC_PersonalCare as string,",
				"          gyro_APAC_Other as string,",
				"          gyro_EMEA_InksAndCoatings as string,",
				"          gyro_EMEA_Thermoplastics as string,",
				"          gyro_EMEA_Lubricants as string,",
				"          gyro_EMEA_PersonalCare as string,",
				"          gyro_EMEA_Other as string,",
				"          RecordEffectiveStartDate as timestamp,",
				"          RecordEffectiveEndDate as timestamp,",
				"          RecordStatus as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}